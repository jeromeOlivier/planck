 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define AL 0
#define FN 1
#define SY1 2
#define SY2 3
#define NV 4
#define SP SPACE
#define HYPR(key) RS(RC(RA(RG(key))))

/ {
    combos {
        compatible = "zmk,combos";
        // grave
        combo_minus {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <AL>;
            bindings = <&kp GRAVE>;
        };
        // minus
        combo_grave {
            timeout-ms = <50>;
            key-positions = <1 2>;
            layers = <AL>;
            bindings = <&kp MINUS>;
        };
        // equal
        combo_equal {
            timeout-ms = <50>;
            key-positions = <2 3>;
            layers = <AL>;
            bindings = <&kp EQUAL>;
        };
        // single quote
        combo_sqt {
            timeout-ms = <50>;
            key-positions = <8 9>;
            layers = <AL>;
            bindings = <&kp SQT>;
        };
        // backslash
        combo_bslh {
            timeout-ms = <50>;
            key-positions = <9 10>;
            layers = <AL>;
            bindings = <&kp BSLH>;
        };
        // brackets & braces
        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <2 15>;
            layers = <AL>;
            bindings = <&kp LBKT>;
        };
        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <9 20>;
            layers = <AL>;
            bindings = <&kp RBKT>;
        };
        // parentheses
        combo_lpar {
            timeout-ms = <50>;
            key-positions = <14 15>;
            layers = <AL>;
            bindings = <&kp LPAR>;
        };
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <20 21>;
            layers = <AL>;
            bindings = <&kp RPAR>;
        };
        // chevrons
        combo_lt {
            timeout-ms = <50>;
            key-positions = <14 27>;
            layers = <AL>;
            bindings = <&kp LT>;
        };
        combo_gt {
            timeout-ms = <50>;
            key-positions = <21 32>;
            layers = <AL>;
            bindings = <&kp GT>;
        };
    };
    behaviors {
//    SHIFTED KEYS
      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        label = "BACKSPACE_DELETE";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      mup: media_up {
        compatible = "zmk,behavior-mod-morph";
        label = "MEDIA_UP";
        #binding-cells = <0>;
        bindings = <&kp C_VOL_UP>, <&kp F15>;
        mods = <(MOD_RSFT)>;
      };

      mdn: media_dn {
        compatible = "zmk,behavior-mod-morph";
        label = "MEDIA_DN";
        #binding-cells = <0>;
        bindings = <&kp C_VOL_DN>, <&kp F14>;
        mods = <(MOD_RSFT)>;
      };

      S8: special_8 {
        compatible = "zmk,behavior-mod-morph";
        label = "SPECIAL_8";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&kp LPAR>;
        mods = <(MOD_LSFT)>;
      };

      S9: special_9 {
        compatible = "zmk,behavior-mod-morph";
        label = "SPECIAL_9";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&kp RPAR>;
        mods = <(MOD_LSFT)>;
      };

      S0: special_0 {
        compatible = "zmk,behavior-mod-morph";
        label = "SPECIAL_0";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp STAR>;
        mods = <(MOD_LSFT)>;
      };

//    HOME ROWS
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <125>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp >;
      };

      pm: pinky_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "PINKY_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp >;
      };

      hm8: homerow_8 {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_8";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <125>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&S8>;
      };

      hm9: homerow_9 {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_9";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <125>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&S9>;
      };

      hm0: homerow_0 {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_0";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&S0>;
      };
    };

    chosen { zmk,matrix_transform = &layout_grid_transform; };

    keymap {
        compatible = "zmk,keymap";

        AL { bindings = <
                &kp Q        &kp W        &kp E       &kp R         &kp T  &none &none &kp Y  &kp U         &kp I      &kp O      &pm SP P
                &pm LCTRL A  &hm LALT S   &hm LGUI D  &hm LSHFT F   &kp G  &none &none &kp H  &hm RSHFT J   &hm RGUI K &hm RALT L &pm RCTRL SEMI
                &kp Z        &kp X        &kp C       &lt FN V      &kp B  &none &none &kp N  &kp M         &kp COMMA  &kp DOT    &kp FSLH
                &none        &none        &kp CAPS    &lt SY1 TAB   &none  &none &none &none  &lt SY2 SP    &mo NV     &none      &none
            >;
        };

        FN { bindings = <
                &kp ESC      &none        &none       &none         &none  &none &none &none  &kp F1       &kp F2      &kp F3      &kp F4
                &kp LCTRL    &kp LALT     &kp LGUI    &kp LSHFT     &none  &none &none &none  &kp F5       &kp F6      &kp F7      &kp F8
                &none        &none        &none       &trans        &none  &none &none &none  &kp F9       &kp F10     &kp F11     &kp F12
                &none        &none        &none       &none         &none  &none &none &none  &none        &none       &none       &none
            >;
        };

        SY1 { bindings = <
                &kp ESC      &none        &none       &none         &none  &none &none &none  &none        &none       &none       &bspc_del
                &pm LCTRL N1 &hm LALT N2  &hm LGUI N3 &hm LSHFT N4  &kp N5 &none &none &kp N6 &hm RSHFT N7 &hm8 RGUI 0 &hm9 RALT 0 &hm0 RCTRL 0
                &none        &none        &none       &none         &none  &none &none &none  &none        &none       &none       &none
                &none        &none        &none       &trans        &none  &none &none &none  &kp RET      &none       &none       &none
            >;
        };

        SY2 { bindings = <
                &kp ESC      &none        &none       &none         &none  &none &none &none  &none        &none       &none       &bspc_del
                &pm LCTRL N1 &hm LALT N2  &hm LGUI N3 &hm LSHFT N4  &kp N5 &none &none &kp N6 &hm RSHFT N7 &hm8 RGUI 0 &hm9 RALT 0 &hm0 RCTRL 0
                &none        &none        &none       &none         &none  &none &none &none  &none        &none       &none       &none
                &none        &none        &kp CAPS    &kp TAB       &none  &none &none &none  &trans       &none       &none       &none
            >;
        };

        NV { bindings = <
                &kp ESC      &none        &kp UP      &none         &none  &none &none &none  &none        &none       &none      &bspc_del
                &mup         &kp LEFT     &kp DOWN    &kp RIGHT     &none  &none &none &none  &kp RSHFT    &kp RGUI    &kp RALT   &kp RCTRL
                &mdn         &kp LC(LEFT) &kp LC(UP)  &kp LC(RIGHT) &none  &none &none &none  &none        &none       &none      &none
                &none        &none        &none       &none         &none  &none &none &none  &none        &trans      &none      &none
            >;
        };
    };
};
